#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_defs/auth_types/auth_types_types'
require 'thrift_defs/geo_types/geo_types_types'
require 'thrift_defs/voter_record_types/voter_record_types_types'


module ThriftDefs
  module RequestTypes
    class Headers; end

    class GetVoterRecordsByIdentifiers; end

    class ContactSearch; end

    class RandomAddress; end

    class Search; end

    class Headers
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ENTITY = 1
      REQUEST_ID = 2

      FIELDS = {
        ENTITY => {:type => ::Thrift::Types::STRUCT, :name => 'entity', :class => ::ThriftDefs::AuthTypes::Entity, :optional => true},
        REQUEST_ID => {:type => ::Thrift::Types::STRING, :name => 'request_id'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetVoterRecordsByIdentifiers
      include ::Thrift::Struct, ::Thrift::Struct_Union
      VOTER_RECORD_IDENTIFIERS = 1

      FIELDS = {
        VOTER_RECORD_IDENTIFIERS => {:type => ::Thrift::Types::STRUCT, :name => 'voter_record_identifiers', :class => ::ThriftDefs::VoterRecordTypes::UniqueIdentifiers}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ContactSearch
      include ::Thrift::Struct, ::Thrift::Struct_Union
      EMAIL = 1
      PHONE = 2
      MAX_RESULTS = 3

      FIELDS = {
        EMAIL => {:type => ::Thrift::Types::STRING, :name => 'email'},
        PHONE => {:type => ::Thrift::Types::STRING, :name => 'phone'},
        MAX_RESULTS => {:type => ::Thrift::Types::I32, :name => 'max_results'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class RandomAddress
      include ::Thrift::Struct, ::Thrift::Struct_Union
      STATE = 1
      SEED = 2

      FIELDS = {
        STATE => {:type => ::Thrift::Types::I32, :name => 'state', :enum_class => ::ThriftDefs::GeoTypes::StateCode},
        SEED => {:type => ::Thrift::Types::I32, :name => 'seed'}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @state.nil? || ::ThriftDefs::GeoTypes::StateCode::VALID_VALUES.include?(@state)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Search
      include ::Thrift::Struct, ::Thrift::Struct_Union
      FIRST_NAME = 1
      MIDDLE_NAME = 2
      LAST_NAME = 3
      DOB = 4
      EMAIL = 5
      PHONE = 6
      STREET_ADDRESS = 7
      CITY = 8
      STATE = 9
      ZIP_CODE = 10
      MAX_RESULTS = 11

      FIELDS = {
        FIRST_NAME => {:type => ::Thrift::Types::STRING, :name => 'first_name'},
        MIDDLE_NAME => {:type => ::Thrift::Types::STRING, :name => 'middle_name'},
        LAST_NAME => {:type => ::Thrift::Types::STRING, :name => 'last_name'},
        DOB => {:type => ::Thrift::Types::STRING, :name => 'dob'},
        EMAIL => {:type => ::Thrift::Types::STRING, :name => 'email'},
        PHONE => {:type => ::Thrift::Types::STRING, :name => 'phone'},
        STREET_ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'street_address'},
        CITY => {:type => ::Thrift::Types::STRING, :name => 'city'},
        STATE => {:type => ::Thrift::Types::I32, :name => 'state', :enum_class => ::ThriftDefs::GeoTypes::StateCode},
        ZIP_CODE => {:type => ::Thrift::Types::STRING, :name => 'zip_code'},
        MAX_RESULTS => {:type => ::Thrift::Types::I32, :name => 'max_results'}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @state.nil? || ::ThriftDefs::GeoTypes::StateCode::VALID_VALUES.include?(@state)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
