# Defines services that can be started in development/test environments within
# the container environment created by Dock.
#
# See the dock/start-everything script for an example of how this is invoked.

version: '2.1'

services:
  # *_base services can be defined within the compose file as seen here or
  # referenced from another file on disk. Use these entries to define configurations
  # core to the particular service type and/or viewed as standards across our
  # infrastructure (e.g. image)
  # TODO ask miller if any of this is relevant:
  # ref ***REMOVED******REMOVED*** for
  # more details and predefined *_base services defined by infrastructure
  voter-verifier_base:
    build:
      context: .
      dockerfile: dock/bootstrap_Dockerfile
    environment:
      APP_UID:
      APP_GID:
      ELASTICSEARCH_HOSTS: http://docker-host:9200/
      SERVICE_HOST: docker-host
    # Add healthchecks with appropriate parameters to see if the service is actually listening on
    # the port. Note: This interval and retries are set for smaller services that come up relatively fast.
    # For bigger services these may need to be tweaked.
    # If it's an http service you may use curl the test. e.g. curl localhost:3000
    # reference: https://docs.docker.com/compose/compose-file/compose-file-v2/#healthcheck
    healthcheck:
      test: 'netstat -nlp | grep 9095'  # parametrize ports
      interval: 1s
      timeout: 10s
      retries: 120
    # Provide port mapping specification, as defined and leveraged by proximo
    # within staging and production environments, in order to avoid port conflicts
    # across services.
    # TODO ask miller if these are relevant
    # ref: ***REMOVED******REMOVED***)
    # for examples.
    # e.g.:
    ports:
      - '9095:9095'
      - '3000:3000'
    volumes:
      - '.:/src'
    working_dir: '/src'
    command: ['bash', '-c', 'dock/initialize && dock/datastore_setup && dock/run']

  voter-verifier:
    extends: voter-verifier_base
    depends_on:
      # We just need to check if the service is healthy. The actual port test is done in
      # base-compose.yml for all the datastores.
      elasticsearch:
        condition: service_healthy
    environment:
      VOTER_VERIFIER_ENV: development

  voter-verifier_test:
    extends: voter-verifier_base
    depends_on:
      elasticsearch_test:
        condition: service_healthy
    environment:
      VOTER_VERIFIER_ENV: test

  elasticsearch:
    extends:
      file: $BASE_COMPOSE
      service: elasticsearch_dev_base
    command: ['elasticsearch']

  elasticsearch_test:
    extends:
      file: $BASE_COMPOSE
      service: elasticsearch_test_base
    command: ['elasticsearch']

# Define names of volumes that you want to be preserved between container restarts.
# These are referenced above in the `volumes` section of the service.
volumes:
  elasticsearch:
